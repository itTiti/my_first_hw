'''
1. Задача на создание списка из четных чисел от 1 до 100: создать список,
содержащий все четные числа от 1 до 100.
'''

# even_numbers = []
#
# for num in range(1, 101):
#     if num % 2 == 0:
#         even_numbers.append(num)
# print(even_numbers)
#
# even_numbers = [num for num in range(1, 101) if num % 2 == 0]
# print(even_numbers)

'''
2. Задача на создание списка из квадратов чисел: создать список, 
содержащий квадраты чисел от 1 до 10.
'''
# squares = []
# for num in range(1, 11):
#     squares.append(num ** 2)
# print(squares)

### Генераторы
# squares = [num ** 2 for num in range(1, 11)]
# print(squares)

'''
3. Задача на создание списка из всех слов, 
начинающихся на определенную букву: создать список, 
содержащий все слова из списка слов, которые начинаются на букву "а".
'''
# list_of_words = ['атлас', 'обои', 'альбом', 'греча', 'ириска', 'август']
# words_with_a = []
# pattern = 'а'
# for word in list_of_words:
#     if word.startswith(pattern):
#        words_with_a.append(word)
# print(words_with_a)   ### ----> Решила за 8  минут этим способом.

### Генераторы
# list_of_words = ['атлас', 'обои', 'альбом', 'греча', 'ириска', 'август']
# pattern = 'а'
# words_with_a = [word for word in list_of_words if word.startswith(pattern)]
# print(words_with_a)

'''
4. Задача на создание списка из чисел, 
которые делятся на определенное число: создать список, 
содержащий все числа от 1 до 100, которые делятся на 3
'''
# numbers = [num for num in range(1, 101) if num % 3 == 0]
# print(numbers)

'''
5. Задача на создание списка из элементов, 
которые находятся только в одном из двух списков: 
создать список, содержащий все элементы, 
которые находятся только в списке A или только в списке B.
'''
# a = [1, 2, 3, 4, 5, 6, 'lol']
# b = [1, 2, 3, 4, 5, 6, 'id']
# c = a + b
# unique_list = []
# for i in c:
#     if i not in a or i not in b:
#         unique_list.append(i)
# print(unique_list)

                                        ### Файл list_tasks.py от 22
'''
1. Задача на сумму элементов вложенного списка:
дан список списков чисел, найти сумму всех элементов в списке.
Например, для списка [[1,2,3],[4,5],[6,7,8,9]] ответ должен быть 45.
'''

# numbers = [[1,2,3],[4,5],[6,7,8,9]]
# # sum_numbers = 0
# for num in numbers:
#     sum_numbers += sum(num)
# print(sum_numbers)  ### Этот способ работает

# numbers = [[1,2,3],[4,5],[6,7,8,9]]
# sum_numbers = [sum(num) for num in numbers]
# print(sum_numbers) ### Через  генераторы Получилось немного не то.

'''
2. Задача на поиск наиболее часто встречающегося элемента в списке: 
дан список элементов, найти элемент, который встречается наибольшее количество раз. 
Например, для списка [1,2,3,4,1,2,1,2,1,1] ответ должен быть 1.
'''

# numbers = [1,2,3,4,1,2,1,2,1,1]
# a = max(numbers, key = numbers.count) ### В твоём примере здесь применен set(), зачем он тут нужен?
# print(a) ### Еблась с count, так и не решила, ответ подсмотрела у тебя. В душе не знала, что max имеет другие аргументы :)

'''
3. Задача на удаление дубликатов в списке: 
дан список элементов, удалить из него все дубликаты. 
Например, для списка [1,2,3,2,1,4,5] ответ должен быть [1,2,3,4,5].
'''
# numbers = [1,2,3,2,1,4,5]
# print(set(numbers)) #### нужна здесь доп. переменная или нет? по идее, нет. Мы ж не собираемся с ней работать в дальнейшем.


'''
4. Задача на объединение двух списков с сохранением порядка элементов: 
даны два списка элементов, объединить их в один список, сохраняя порядок элементов из каждого списка. 
Например, для списков [1,2,3] и [4,5,6] ответ должен быть [1,2,3,4,5,6].
'''
# a = [1,2,3]
# b = [4,5,6]
# c = a + b
# print(c)
#
# c = [ls for ls in a + b]
# print(c) ## Сама охуела, но работает :D писала а + b (с мыслью, а вдруг сработает) :D

'''
5. Задача на поиск наибольшей последовательности возрастающих элементов в списке: 
дан список чисел, найти наибольшую последовательность возрастающих элементов. 
Например, для списка [1,2,3,2,5,6,7,3,4,5,8] ответ должен быть [3,4,5,8].
'''
### Что-то не поняла как решать.  Идей по решениею нет, поэтому в подсказки не смотрела.


'''
6. Задача на поиск наименьшего неотрицательного целого числа, 
отсутствующего в списке: дан список целых чисел, 
найти наименьшее неотрицательное число, которого нет в списке. 
Например, для списка [1,3,5,7] ответ должен быть 0, а для списка [-1,-3,4,2] ответ должен быть 0.
'''
### Что-то не поняла как решать.  Идей по решениею нет, поэтому в подсказки не смотрела.















